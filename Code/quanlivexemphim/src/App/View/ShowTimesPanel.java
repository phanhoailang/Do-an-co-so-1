/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package App.View;

import App.Dao.FilmDao;
import App.Dao.TicketDao;
import App.Helpers.Datavalidator;
import App.Helpers.MessageDialog;
import App.Model.Film;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author win10
 */
public class ShowTimesPanel extends javax.swing.JPanel {

    /**
     * Creates new form ShowTimes
     */
    private DefaultTableModel dtbModel;

    public ShowTimesPanel() {
        initComponents();
        jRadioButton_active.setSelected(true);
    }

    public void setTable(ArrayList<Film> list) {
        dtbModel = (DefaultTableModel) jTable1.getModel();
        FilmDao dao = new FilmDao();
        TicketDao tk_dao = new TicketDao();
        Film film = new Film();
        dtbModel.setRowCount(0);
        for (Film f : list) {

            double price = 0;
            String status = "";
            if (f.isStatusFilm() == true) {
                status = "Chiếu";
            } else {
                status = "Không chiếu";
            }
            try {
                price = tk_dao.price(f.getIdFilm());
            } catch (Exception ex) {
                Logger.getLogger(BuyTicketPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[] row = new String[]{
                f.getNameFilm(), f.getIdFilm(), status, price + ""
            };
            dtbModel.addRow(row);
        }

        dtbModel.fireTableDataChanged();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jTextField_nameFilm = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jTextField_idFilm = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jTextField_Price = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton_update = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jRadioButton_active = new javax.swing.JRadioButton();
        jRadioButton_noActice = new javax.swing.JRadioButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Tên phim", "Mã phim", "Tình trạng", "Giá vé"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Tên phim");

        jTextField_nameFilm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField_nameFilmActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Mã phim");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Giá vé");

        jButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton1.setText("Thêm phim");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton_update.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton_update.setText("Cập nhật");
        jButton_update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_updateActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Tình trạng");

        buttonGroup1.add(jRadioButton_active);
        jRadioButton_active.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton_active.setText("Chiếu");

        buttonGroup1.add(jRadioButton_noActice);
        jRadioButton_noActice.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton_noActice.setText("Không chiếu");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTextField_nameFilm)
                                .addComponent(jTextField_idFilm)
                                .addComponent(jTextField_Price)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(168, 168, 168))
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jRadioButton_active, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jRadioButton_noActice)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton_update, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 120, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_nameFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_idFilm, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextField_Price, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton_active)
                    .addComponent(jRadioButton_noActice))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton_update, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addGap(28, 28, 28))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField_nameFilmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField_nameFilmActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField_nameFilmActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        StringBuffer sb = new StringBuffer();
        Datavalidator.validateEmpty(jTextField_nameFilm, sb, "Tên phim không được để trống");
        Datavalidator.validateEmpty(jTextField_idFilm, sb, "Mã phim không được để trống");
        Datavalidator.validateEmpty(jTextField_Price, sb, "Giá vé không được để trống");
        if (sb.length() > 0) {
            MessageDialog.showMessageDialog(jLabel1, "Thông báo", sb.toString());
            return;
        }
        FilmDao dao = new FilmDao();
        TicketDao tk_dao = new TicketDao();
        try {
            if (dao.check(jTextField_nameFilm.getText(), jTextField_idFilm.getText()) != null) {
                MessageDialog.showMessageDialog(jLabel1, "Thông Báo", "Đã có phim này trong hệ thống");
            } else {
                String status = "";
                Enumeration<AbstractButton> btn = this.buttonGroup1.getElements();
                while (btn.hasMoreElements()) {
                    AbstractButton b = btn.nextElement();
                    if (b.isSelected()) {
                        status = b.getText();
                    }
                }
                dao.insert(jTextField_idFilm.getText(), jTextField_nameFilm.getText(), status);
                for (int i = 1; i <= 9; i++) {
                    String idTicket = "";
                    if (i >= 1 && i <= 3) {
                        idTicket = jTextField_idFilm.getText() + "_A" + i;
                    } else if (i > 3 && i <= 6) {
                        idTicket = jTextField_idFilm.getText() + "_B" + (i - 3);
                    } else if (i > 6 && i <= 9) {
                        idTicket = jTextField_idFilm.getText() + "_C" + (i - 6);
                    }
                    tk_dao.insert(idTicket, jTextField_idFilm.getText(), Double.parseDouble(jTextField_Price.getText()));
                }
                MessageDialog.showMessageDialog(jLabel1, "Thông Báo", "Tạo phim thành công");
                jTextField_Price.setText("");
                jTextField_idFilm.setText("");
                jTextField_nameFilm.setText("");
                jRadioButton_active.setEnabled(true);
            }
            setTable(dao.select());
        } catch (Exception ex) {
            Logger.getLogger(ShowTimesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton_updateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_updateActionPerformed
        FilmDao dao = new FilmDao();
        TicketDao tk_dao = new TicketDao();
        try {
            if (dao.check(jTextField_nameFilm.getText(), jTextField_idFilm.getText()) == null && dao.check(jTextField_idFilm.getText()) == null) {
                MessageDialog.showMessageDialog(jLabel1, "Thông báo", "Thông tin cập nhật không hợp lệ");
            } else {
                String status = "";
                Enumeration<AbstractButton> btn = this.buttonGroup1.getElements();
                while (btn.hasMoreElements()) {
                    AbstractButton b = btn.nextElement();
                    if (b.isSelected()) {
                        status = b.getText();
                    }
                }               
                dao.status(jTextField_idFilm.getText(), status);
                if(!jTextField_Price.getText().equals("")){
                    tk_dao.update(jTextField_idFilm.getText(), Double.parseDouble(jTextField_Price.getText()));
                }
                MessageDialog.showMessageDialog(jLabel1, "Thông báo", "Cập nhật thành công");
                setTable(dao.select());
            }
        } catch (Exception ex) {
            Logger.getLogger(ShowTimesPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton_updateActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton_update;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JRadioButton jRadioButton_active;
    private javax.swing.JRadioButton jRadioButton_noActice;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField_Price;
    private javax.swing.JTextField jTextField_idFilm;
    private javax.swing.JTextField jTextField_nameFilm;
    // End of variables declaration//GEN-END:variables
}
